define("cpuSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={851:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(117),i(117),i(117)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuCountersDataSeries=void 0;class g{constructor(e,t,s,a,m,_,T){this._logger=u.getLogger("CpuCountersDataSeries"),this._cachedPoints=new Map,this._drawFill=!1,this._pkeyToColorIdx=new Map,this._droppedRequests=0,this._currentTimespan=new l.JsonTimespan(l.BigNumber.zero,l.BigNumber.zero),this.legendData=[],this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new o.AggregatedEvent,this._viewEventManager=d.getViewEventManager(),this._isCollectionActive=!1,this._processesInfo=new Map,this._usedColors=new Set,this._samples=250,this._currentTimespan=t,this._unitConverter=s,this._drawFill=a,this._title=m,this._tooltip=T,this._isMultiproc=_,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.width=2*g.PointRadiusInPixels+"px",this._marker.style.height=2*g.PointRadiusInPixels+"px",_?(this._processKeys=[],this._colorScheme=n.Utilities.getColorSet().map((e=>new r.ChartColorScheme(e,e))),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction)):(this._colorScheme=[new r.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)")],this._marker.style.backgroundColor=this._colorScheme[0].lineColor),this._viewEventManager.processSelectionChanged.addEventListener((e=>{this._processKeys=e.pkeys,this._usedColors.clear(),this._pkeyToColorIdx.forEach(((e,t)=>{this._processKeys.some((e=>p.getProcessKeyId(e)===t))&&this._usedColors.add(e)})),this.requestUpdate()})),this._dataWarehouseRequestHandle=c.getCurrentDocument().isActiveSession().then((e=>{this._isCollectionActive=e})).then((()=>h.loadDataWarehouse())).then((t=>{this._dw=t;const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,g.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests=0,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get graphLegendData(){return this.legendData}getLatestPoint(){if(0===this._cachedPoints.size)return null;const e=Array.from(this._cachedPoints.values()).map((e=>e[e.length-1]));return e.sort(((e,t)=>t.Timestamp.compareTo(e.Timestamp))),e[e.length-1]}get cachedPoints(){return this._cachedPoints}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose(),this._isMultiproc&&i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction)}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.size;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this.getLatestPoint().Timestamp))&&this.requestUpdate()}getOccurenceIndex(e,t,i,s,r){const o=(e,t)=>t.greaterOrEqual(e);switch(r){case a.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,t,o,i,s);case a.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,t,o,i,s);case a.PointToFind.Nearest:default:{i=n.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1);const a=l.BigNumber.subtract(t,e[i]),r=l.BigNumber.subtract(e[s],t);return a.greater(r)?s:i}}}getPointAtTimestamp(e,t=a.PointToFind.Nearest,s){if(0===this._cachedPoints.size)return null;const r=[];let n={Timestamp:e,Value:0};const o=s?p.getProcessKeyId(s):null;this._cachedPoints.forEach(((i,s)=>{o&&o!==s||0===i.length||(n=i[this.getOccurenceIndex(i.map((e=>e.Timestamp)),e,0,i.length-1,t)],r.push({pkey:s,point:n}))}));let h="";r.length>1?r.forEach((e=>{const t=this._processesInfo&&this._processesInfo.size>0?this._processesInfo.get(e.pkey)?.name:e.point.ToolTip;0!==e.point.Value&&(h+=`${t}: ${this._unitConverter.formatNumber(e.point.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)}\n`)})):h+=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(n.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0));const l=r.reduce(((e,t)=>e+t.point.Value),0);return{timestamp:n.Timestamp,tooltip:h,value:l}}draw(e,t){if(0===this._cachedPoints.size||t.gridX.elapsed.equals(l.BigNumber.zero)||t.chartRect.width<=0)return;const i=Array.from(this._cachedPoints.entries());i.sort(((e,t)=>{const[,i]=e,[,s]=t;return i[0].Timestamp.compareTo(s[0].Timestamp)}));const[s,a]=i[0];let r=this.cachedPoints.size>1,n=this.drawSingleChart(a,this._colorScheme[this._pkeyToColorIdx.get(s)],e,t,r);for(let s=1;s<g.ProcessLimit&&s<i.length;s++){s!==g.ProcessLimit-1&&s!==i.length-1||(r=!1);const[a,o]=i[s];n=this.drawSingleChart(o,this._colorScheme[this._pkeyToColorIdx.get(a)],e,t,r,n)}}drawSingleChart(e,t,s,a,r,o){if(0===e.length||a.gridX.elapsed.equals(l.BigNumber.zero)||a.chartRect.width<=0)return[];a.chartRect.width!==this._samples&&(this._samples=a.chartRect.width,this.requestUpdate());const h=null!=o,u=e=>a.chartRect.height-n.Utilities.scaleToRange(e,a.gridY.min,a.gridY.max,0,a.chartRect.height),d=e=>n.Utilities.convertToPixel(e,a.gridX,a.chartRect.width,!1);s.save(),s.globalCompositeOperation="destination-over",s.lineWidth=a.chartRect.height<100?1:2,g.GapPx=s.lineWidth/2,s.fillStyle=t.lineFillColor,s.strokeStyle=r?i.Theme.getValue("plugin-background-color"):t.lineColor;const c=[],p=d(e[0].Timestamp);s.beginPath();const m=h?this.interpolateY(o,e[0],a):u(e[0].Value);if(s.moveTo(p,m),e.forEach((e=>{const t=h?this.interpolateY(o,e,a):u(e.Value);s.lineTo(d(e.Timestamp),t),c.push({timestamp:e.Timestamp,yCoordinate:t})})),s.stroke(),this._drawFill){const t=e[e.length-1];s.lineTo(d(t.Timestamp),u(a.gridY.min)),s.lineTo(p,a.chartRect.height),s.closePath(),s.fill()}const _=l.BigNumber.divideNumber(a.gridX.elapsed,a.chartRect.width);return l.BigNumber.convertFromNumber(g.CounterFrequencyPerPixel).greater(_)&&e.forEach((e=>{s.beginPath();const t=h?this.interpolateY(o,e,a):u(e.Value);s.arc(d(e.Timestamp),t,g.PointRadiusInPixels,0,2*Math.PI),s.fill()})),s.restore(),c}interpolateY(e,t,i){const s=t.Timestamp,r=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,a.PointToFind.LessThanOrEqual)],o=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,a.PointToFind.GreaterThanOrEqual)],h=(l=t.Value,i.chartRect.height-n.Utilities.scaleToRange(l,i.gridY.min,i.gridY.max,0,i.chartRect.height));var l;if(o.timestamp.compareTo(s)<0)return h;const u=n.Utilities.linearInterpolate(s,r.timestamp,r.yCoordinate,o.timestamp,o.yCoordinate),d=i.chartRect.height<=u?0:i.chartRect.height-(u-g.GapPx);return Math.max(h-d,0)}onThemeChanged(){const e=n.Utilities.getColorSet();this._colorScheme=e.map((e=>new r.ChartColorScheme(e,e))),this.requestUpdate()}requestUpdate(){if(this._dataWarehouseRequestHandle)return void this._droppedRequests++;if(this._currentTimespan.elapsed.equals(l.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=l.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=l.BigNumber.subtract(this._currentTimespan.begin,l.BigNumber.min(e,this._currentTimespan.begin)),i=l.BigNumber.multiply(l.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=l.BigNumber.add(i,l.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r={type:"SamplePoints",begin:i.jsonValue,end:a.jsonValue,samples:Math.max(this._samples,2),processKeys:this._processKeys};this._dataWarehouseRequestHandle=this._countersResult.getResult(r).then((e=>{const t=Array.isArray(e)?e:[e];this.cachePoints(t)})).then((()=>{if(!this._isCollectionActive){const e={customDomain:{Task:"GetProcesses"}};return this._dw.getFilteredData(e,g.analyzerId).then((e=>e.getResult({type:"GetProcesses"}))).then((e=>{e.forEach((e=>{this._processesInfo.set(p.getProcessKeyId(e.key),{name:""===e.key.name?e.key.pid.toString():e.key.name,pid:e.key.pid})}))}))}return Promise.resolve()})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests>0&&(this._logger.info(`Dropped ${this._droppedRequests} requests to the DataWarehouse`),window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutRollingGraph),this._droppedRequests=0)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){this.cachedPoints.clear(),e.forEach((e=>{if(0===e.p.length)return;const t=p.getProcessKeyId(e.key);this._cachedPoints.has(t)||this._cachedPoints.set(t,[]),e.p.forEach((s=>{const a=new l.BigNumber(s.t.h,s.t.l);this._seriesMin=Math.min(this._seriesMin,s.v),this._seriesMax=Math.max(this._seriesMax,s.v),this._cachedPoints.get(t).push({Timestamp:a,Value:s.v,ToolTip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",e.key.pid)})}))})),this.setLegendData(e),this._newDataEvent.invokeEvent(this)}setLegendData(e){this.legendData=[];const t=this._processesInfo&&this._processesInfo.size>0;let s=0;for(let a=0;a<g.ProcessLimit&&a<e.length;a++){const r=e[a],n=p.getProcessKeyId(r.key);let o;const h=this._pkeyToColorIdx.get(n);if(void 0!==h)o=this._colorScheme[h];else{for(;this._usedColors.has(s);)s=(s+1)%this._colorScheme.length;o=this._colorScheme[s],this._usedColors.add(s),this._pkeyToColorIdx.set(n,s)}const l=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",r.key.pid),u=t?this._processesInfo.get(n).name:l;this.legendData.push({color:o.lineFillColor,legendText:u,legendTooltip:l})}}}t.CpuCountersDataSeries=g,g.PointRadiusInPixels=2.5,g.CounterFrequencyPerPixel=1e8/(2*g.PointRadiusInPixels+4),g.ProcessLimit=5,g.GapPx=2}.apply(t,s),void 0===a||(e.exports=a)},68:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(851),i(67),i(479),i(560)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneFactory=void 0,t.CpuSwimlaneFactory=function(e,t,g,m,_,T){const w=new l.SwimlaneConfiguration(e,_,m);w.header.isBodyExpanded=t;const C=w.graph,v=new i.LocalizedUnitConverter(C.jsonConfig.Units,C.resources),S=[],R=new u.CpuCountersDataSeries(C.jsonConfig.Series[0].DataSource.CounterId,w.graph.timeRange,new i.LocalizedUnitConverter(C.jsonConfig.Units,C.resources),!0,w.graph.resources[C.jsonConfig.Series[0].Legend],C.jsonConfig.IsMultiproc,w.graph.resources[C.jsonConfig.Series[0].LegendTooltip]);S.push(R);const P=new d.EnabledDataSeries(R,C.jsonConfig.EnabledAtStart,C.jsonConfig.IsMultiproc,w.graph.resources.CpuGraphProfilingEnabled);if(S.push(P),!C.jsonConfig.IsCollecting){const e=new c.HighlightDataSeries(R,w.graph.timeRange,w.graph.resources.CpuGraphCurrentFunction);S.push(e)}w.graph.jsonConfig.Series=[];const b=new r.MultiSeriesGraph(w.graph,S);b.container.setAttribute("aria-label",e.Title);const y=new n.Scale(w.graph.scale,s.ScaleType.Left,v),f=new n.Scale(w.graph.scale,s.ScaleType.Right,v);b.scaleChangedEvent.addEventListener(y.onScaleChanged.bind(y)),b.scaleChangedEvent.addEventListener(f.onScaleChanged.bind(f)),w.header.unit=w.graph.unit;const D=new h.SwimlaneBase(w.header,w.graph.height,_,T);return b.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D)),g?D.addMainRegionControl(new o.SelectionOverlay(b,_,T,w.id)):D.addMainRegionControl(b),D.addMainRegionControl(new a.GridLineRenderer(_)),D.addLeftRegionControl(y),D.addRightRegionControl(f),C.jsonConfig.IsMultiproc&&D.addTitleControl(new p.CustomLegend(R)),D}}.apply(t,s),void 0===a||(e.exports=a)},319:(e,t,i)=>{var s,a;s=[i,t,i(226),i(117)],a=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneMarshaler=void 0;let a=null;t.CpuSwimlaneMarshaler=class{constructor(){null===a&&(a=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.CpuSampling.CpuToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(a,"GraphHighlightChangedEvent")}isToolSupported(){return a._call("isToolSupported")}isGraphHighlightingEnabled(){return a._call("isGraphHighlightingEnabled")}updateGraphHighlight(e,t){return a._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return a._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}getCurrentResultStatus(){return a._call("getCurrentResultStatus")}}}.apply(t,s),void 0===a||(e.exports=a)},67:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319),i(117)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class p{constructor(e,t,s,a){this._logger=u.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._droppedRequest=!1,this._newDataEvent=new o.AggregatedEvent,this._colorScheme=new r.ChartColorScheme("#92AB00","#AECD00"),this._title=a,this._tooltip=a,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*p.PointRadiusInPixels+"px",this._marker.style.height=2*p.PointRadiusInPixels+"px",this._isMultiproc=s,s&&(this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction),this._patternCanvas=new OffscreenCanvas(5,5),this.drawHashPattern()),this._cpuDataSeries=e;const n=new d.CpuSwimlaneMarshaler;this._dataWarehouseRequestHandle=n.isToolSupported().then((e=>e?(this._enabledAtStart=t,c.getCurrentDocument().isActiveSession()):Promise.resolve(null))).then((e=>(this._isCollectionActive=e,h.loadDataWarehouse()))).then((e=>{const t={customDomain:{CounterId:p.counterId}};return e.getFilteredData(t,p.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"CpuTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.size||0===this._toggleEvents.length&&!this._enabledAtStart)return null;const i={Timestamp:e,Value:0},s=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=n.Utilities.findLessThan(this._toggleEvents,i,s);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this._cpuDataSeries.getPointAtTimestamp(e,t);return{timestamp:o.timestamp,tooltip:this._tooltip,value:o.value}}onDataUpdate(e){this.requestUpdate()}draw(e,t){0!==this._cpuDataSeries.cachedPoints.size&&0!==t.chartRect.width&&(e.save(),this._isMultiproc?this.drawMultiLine(e,t):this.drawSingleLine(e,t),e.restore())}drawHashPattern(){const e=this._patternCanvas.getContext("2d");e.clearRect(0,0,5,5),e.strokeStyle=i.Theme.getValue("diagnostics-host-border"),e.fillStyle="rgb(0, 0, 0, 0)",e.fillRect(0,0,5,5),e.moveTo(0,5),e.lineTo(5,0),e.stroke()}onThemeChanged(){this.drawHashPattern(),this.requestUpdate()}drawSingleLine(e,t){e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=this._cpuDataSeries.cachedPoints.values().next().value;if(0===i.length||0===t.chartRect.width)return;let s=0,r=i.length-1,n=this._enabledAtStart;for(const o of this._toggleEvents)o.Value>.5?(s=this.getPointIndex(i,o.Timestamp,0,i.length-1,a.PointToFind.Nearest),n=!0):(r=this.getPointIndex(i,o.Timestamp,0,i.length-1,a.PointToFind.Nearest),n=!1,this.drawBetweenIndices(e,t,s,r));n&&this.drawBetweenIndices(e,t,s,i.length-1)}drawMultiLine(e,t){let i=l.BigNumber.zero,s=this._cpuDataSeries.getLatestPoint().Timestamp,a=this._enabledAtStart;for(const r of this._toggleEvents)r.Value>.5?(a=!0,s=r.Timestamp,this.drawBetweenTimestamps(e,t,i,s)):(a=!1,i=r.Timestamp);if(!a){const s=this._isCollectionActive?this._cpuDataSeries.getLatestPoint().Timestamp:null;this.drawBetweenTimestamps(e,t,i,s)}}drawBetweenIndices(e,t,i,s){const a=this._cpuDataSeries.cachedPoints.values().next().value;e.beginPath();for(let r=i;r<=s;++r)e.lineTo(this.getXCoordinate(a[r].Timestamp,t),this.getYCoordinate(a[r].Value,t));e.stroke(),e.lineTo(this.getXCoordinate(a[s].Timestamp,t),this.getYCoordinate(t.gridY.min,t)),e.lineTo(this.getXCoordinate(a[i].Timestamp,t),t.chartRect.height),e.closePath(),e.fill();const r=l.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(l.BigNumber.convertFromNumber(p.CounterFrequencyPerPixel).greater(r))for(let r=i;r<=s;++r)e.beginPath(),e.arc(this.getXCoordinate(a[r].Timestamp,t),this.getYCoordinate(a[r].Value,t),p.PointRadiusInPixels,0,2*Math.PI),e.fill()}drawBetweenTimestamps(e,t,i,s){const a=e.createPattern(this._patternCanvas,"repeat");e.fillStyle=a;const r=this.getXCoordinate(i,t),n=null===s?t.chartRect.width-r:this.getXCoordinate(s,t)-r;e.fillRect(r,0,n,t.chartRect.height)}getXCoordinate(e,t){return n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1)}getYCoordinate(e,t){return t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height)}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new l.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,s,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),h={Timestamp:t,Value:0};switch(r){case a.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,h,o,i,s);case a.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,h,o,i,s);case a.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,h,o),s=Math.min(i+1,e.length-1),a=l.BigNumber.subtract(t,e[i].Timestamp),r=l.BigNumber.subtract(e[s].Timestamp,t);return a.greater(r)?s:i}}}}t.EnabledDataSeries=p,p.PointRadiusInPixels=2.5,p.CounterFrequencyPerPixel=1e8/(2*p.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},479:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319),i(886)],a=function(e,t,i,s,a,r,n,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._droppedRequest=!1,this._newDataEvent=new n.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._cpuSwimlaneMarshaler=new u.CpuSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new a.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._cpuDataSeries=e,this._currentTimespan=t,this._cpuSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._dataWarehouseRequestHandle=o.loadDataWarehouse().then((e=>{if(e){this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}}))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._cpuSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.size||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._cpuDataSeries.cachedPoints.size||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((r=>{const n=i(r),o=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.LessThanOrEqual),h=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=a(o.value),d=i(h.timestamp),c={x:n,y:u+(a(h.value)-u)/(d-l)*(n-l)};e.beginPath(),e.moveTo(c.x+.5,a(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){if(this._dataWarehouseRequestHandle)return void(this._droppedRequest=!0);if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r=this._rowId,n=this._rowType;this._dataWarehouseRequestHandle=this._cpuSwimlaneMarshaler.isGraphHighlightingEnabled().then((e=>e?this._cpuSwimlaneMarshaler.getCurrentResultStatus():null)).then((e=>{if(!e)return c.EmptyOccurrencesDto;if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(n!==d.RowType.CallTreeNode&&n!==d.RowType.Function&&n!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:a.jsonValue,rowId:r,rowType:n,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps?e.timestamps.map((e=>new h.BigNumber(e.h,e.l))):[],this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}getOccurrencePointIndex(e,t,i,a,n){const o=(e,t)=>t.greater(e);switch(n){case s.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,t,o,i,a);case s.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,t,o,i,a);case s.PointToFind.Nearest:default:{const i=r.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i]),n=h.BigNumber.subtract(e[s],t);return a.greater(n)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===a||(e.exports=a)},371:(e,t,i)=>{var s,a;s=[i,t,i(68)],a=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.CpuSwimlaneFactory=i.CpuSwimlaneFactory}.apply(t,s),void 0===a||(e.exports=a)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,a,r,n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(n=t.ResultTaskType||(t.ResultTaskType={}))[n.Expand=1]="Expand",n[n.Search=2]="Search",n[n.GetData=3]="GetData",n[n.Sort=4]="Sort",(r=t.RowType||(t.RowType={}))[r.Unknown=0]="Unknown",r[r.Process=1]="Process",r[r.Module=2]="Module",r[r.Function=3]="Function",r[r.Thread=4]="Thread",r[r.CallTreeNode=5]="CallTreeNode",r[r.Allocation=6]="Allocation",(a=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[a.NotStarted=0]="NotStarted",a[a.InProgress=1]="InProgress",a[a.Completed=2]="Completed",a[a.Canceled=3]="Canceled",a[a.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Sampling=2]="Sampling"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},226:e=>{"use strict";e.exports=i}},a={},function e(t){var i=a[t];if(void 0!==i)return i.exports;var r=a[t]={exports:{}};return s[t](r,r.exports,e),r.exports}(371);var s,a}));
// SIG // Begin signature block
// SIG // MIIoUwYJKoZIhvcNAQcCoIIoRDCCKEACAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // ZMxXdZnNpXEtG3mhguDqLj229+uPL8xOAYBAoku7rvyg
// SIG // gg2FMIIGAzCCA+ugAwIBAgITMwAABAO91ZVdDzsYrQAA
// SIG // AAAEAzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTI0MDkxMjIwMTExM1oX
// SIG // DTI1MDkxMTIwMTExM1owdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // n3RnXcCDp20WFMoNNzt4s9fV12T5roRJlv+bshDfvJoM
// SIG // ZfhyRnixgUfGAbrRlS1St/EcXFXD2MhRkF3CnMYIoeMO
// SIG // MuMyYtxr2sC2B5bDRMUMM/r9I4GP2nowUthCWKFIS1RP
// SIG // lM0YoVfKKMaH7bJii29sW+waBUulAKN2c+Gn5znaiOxR
// SIG // qIu4OL8f9DCHYpME5+Teek3SL95sH5GQhZq7CqTdM0fB
// SIG // w/FmLLx98SpBu7v8XapoTz6jJpyNozhcP/59mi/Fu4tT
// SIG // 2rI2vD50Vx/0GlR9DNZ2py/iyPU7DG/3p1n1zluuRp3u
// SIG // XKjDfVKH7xDbXcMBJid22a3CPbuC2QJLowIDAQABo4IB
// SIG // gjCCAX4wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFOpuKgJKc+OuNYitoqxfHlrE
// SIG // gXAZMFQGA1UdEQRNMEukSTBHMS0wKwYDVQQLEyRNaWNy
// SIG // b3NvZnQgSXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQx
// SIG // FjAUBgNVBAUTDTIzMDAxMis1MDI5MjYwHwYDVR0jBBgw
// SIG // FoAUSG5k5VAF04KqFzc3IrVtqMp1ApUwVAYDVR0fBE0w
// SIG // SzBJoEegRYZDaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
// SIG // L3BraW9wcy9jcmwvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNybDBhBggrBgEFBQcBAQRVMFMwUQYIKwYB
// SIG // BQUHMAKGRWh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9w
// SIG // a2lvcHMvY2VydHMvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNydDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQBRaP+hOC1+dSKhbqCr1LIvNEMrRiOQ
// SIG // EkPc7D6QWtM+/IbrYiXesNeeCZHCMf3+6xASuDYQ+AyB
// SIG // TX0YlXSOxGnBLOzgEukBxezbfnhUTTk7YB2/TxMUcuBC
// SIG // P45zMM0CVTaJE8btloB6/3wbFrOhvQHCILx41jTd6kUq
// SIG // 4bIBHah3NG0Q1H/FCCwHRGTjAbyiwq5n/pCTxLz5XYCu
// SIG // 4RTvy/ZJnFXuuwZynowyju90muegCToTOwpHgE6yRcTv
// SIG // Ri16LKCr68Ab8p8QINfFvqWoEwJCXn853rlkpp4k7qzw
// SIG // lBNiZ71uw2pbzjQzrRtNbCFQAfmoTtsHFD2tmZvQIg1Q
// SIG // VkzM/V1KCjHL54ItqKm7Ay4WyvqWK0VIEaTbdMtbMWbF
// SIG // zq2hkRfJTNnFr7RJFeVC/k0DNaab+bpwx5FvCUvkJ3z2
// SIG // wfHWVUckZjEOGmP7cecefrF+rHpif/xW4nJUjMUiPsyD
// SIG // btY2Hq3VMLgovj+qe0pkJgpYQzPukPm7RNhbabFNFvq+
// SIG // kXWBX/z/pyuo9qLZfTb697Vi7vll5s/DBjPtfMpyfpWG
// SIG // 0phVnAI+0mM4gH09LCMJUERZMgu9bbCGVIQR7cT5YhlL
// SIG // t+tpSDtC6XtAzq4PJbKZxFjpB5wk+SRJ1gm87olbfEV9
// SIG // SFdO7iL3jWbjgVi1Qs1iYxBmvh4WhLWr48uouzCCB3ow
// SIG // ggVioAMCAQICCmEOkNIAAAAAAAMwDQYJKoZIhvcNAQEL
// SIG // BQAwgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
// SIG // aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
// SIG // ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xMjAwBgNVBAMT
// SIG // KU1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhv
// SIG // cml0eSAyMDExMB4XDTExMDcwODIwNTkwOVoXDTI2MDcw
// SIG // ODIxMDkwOVowfjELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYG
// SIG // A1UEAxMfTWljcm9zb2Z0IENvZGUgU2lnbmluZyBQQ0Eg
// SIG // MjAxMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
// SIG // ggIBAKvw+nIQHC6t2G6qghBNNLrytlghn0IbKmvpWlCq
// SIG // uAY4GgRJun/DDB7dN2vGEtgL8DjCmQawyDnVARQxQtOJ
// SIG // DXlkh36UYCRsr55JnOloXtLfm1OyCizDr9mpK656Ca/X
// SIG // llnKYBoF6WZ26DJSJhIv56sIUM+zRLdd2MQuA3WraPPL
// SIG // bfM6XKEW9Ea64DhkrG5kNXimoGMPLdNAk/jj3gcN1Vx5
// SIG // pUkp5w2+oBN3vpQ97/vjK1oQH01WKKJ6cuASOrdJXtjt
// SIG // 7UORg9l7snuGG9k+sYxd6IlPhBryoS9Z5JA7La4zWMW3
// SIG // Pv4y07MDPbGyr5I4ftKdgCz1TlaRITUlwzluZH9TupwP
// SIG // rRkjhMv0ugOGjfdf8NBSv4yUh7zAIXQlXxgotswnKDgl
// SIG // mDlKNs98sZKuHCOnqWbsYR9q4ShJnV+I4iVd0yFLPlLE
// SIG // tVc/JAPw0XpbL9Uj43BdD1FGd7P4AOG8rAKCX9vAFbO9
// SIG // G9RVS+c5oQ/pI0m8GLhEfEXkwcNyeuBy5yTfv0aZxe/C
// SIG // HFfbg43sTUkwp6uO3+xbn6/83bBm4sGXgXvt1u1L50kp
// SIG // pxMopqd9Z4DmimJ4X7IvhNdXnFy/dygo8e1twyiPLI9A
// SIG // N0/B4YVEicQJTMXUpUMvdJX3bvh4IFgsE11glZo+TzOE
// SIG // 2rCIF96eTvSWsLxGoGyY0uDWiIwLAgMBAAGjggHtMIIB
// SIG // 6TAQBgkrBgEEAYI3FQEEAwIBADAdBgNVHQ4EFgQUSG5k
// SIG // 5VAF04KqFzc3IrVtqMp1ApUwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAUci06AjGQQ7kUBU7h
// SIG // 6qfHMdEjiTQwWgYDVR0fBFMwUTBPoE2gS4ZJaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNy
// SIG // bDBeBggrBgEFBQcBAQRSMFAwTgYIKwYBBQUHMAKGQmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNydDCB
// SIG // nwYDVR0gBIGXMIGUMIGRBgkrBgEEAYI3LgMwgYMwPwYI
// SIG // KwYBBQUHAgEWM2h0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2lvcHMvZG9jcy9wcmltYXJ5Y3BzLmh0bTBABggr
// SIG // BgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBwAG8AbABp
// SIG // AGMAeQBfAHMAdABhAHQAZQBtAGUAbgB0AC4gHTANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAZ/KGpZjgVHkaLtPYdGcimwuW
// SIG // EeFjkplCln3SeQyQwWVfLiw++MNy0W2D/r4/6ArKO79H
// SIG // qaPzadtjvyI1pZddZYSQfYtGUFXYDJJ80hpLHPM8QotS
// SIG // 0LD9a+M+By4pm+Y9G6XUtR13lDni6WTJRD14eiPzE32m
// SIG // kHSDjfTLJgJGKsKKELukqQUMm+1o+mgulaAqPyprWElj
// SIG // HwlpblqYluSD9MCP80Yr3vw70L01724lruWvJ+3Q3fMO
// SIG // r5kol5hNDj0L8giJ1h/DMhji8MUtzluetEk5CsYKwsat
// SIG // ruWy2dsViFFFWDgycScaf7H0J/jeLDogaZiyWYlobm+n
// SIG // t3TDQAUGpgEqKD6CPxNNZgvAs0314Y9/HG8VfUWnduVA
// SIG // KmWjw11SYobDHWM2l4bf2vP48hahmifhzaWX0O5dY0Hj
// SIG // Wwechz4GdwbRBrF1HxS+YWG18NzGGwS+30HHDiju3mUv
// SIG // 7Jf2oVyW2ADWoUa9WfOXpQlLSBCZgB/QACnFsZulP0V3
// SIG // HjXG0qKin3p6IvpIlR+r+0cjgPWe+L9rt0uX4ut1eBrs
// SIG // 6jeZeRhL/9azI2h15q/6/IvrC4DqaTuv/DDtBEyO3991
// SIG // bWORPdGdVk5Pv4BXIqF4ETIheu9BCrE/+6jMpF3BoYib
// SIG // V3FWTkhFwELJm3ZbCoBIa/15n8G9bW1qyVJzEw16UM0x
// SIG // ghomMIIaIgIBATCBlTB+MQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5n
// SIG // IFBDQSAyMDExAhMzAAAEA73VlV0POxitAAAAAAQDMA0G
// SIG // CWCGSAFlAwQCAQUAoIGuMBkGCSqGSIb3DQEJAzEMBgor
// SIG // BgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEE
// SIG // AYI3AgEVMC8GCSqGSIb3DQEJBDEiBCAiXTWLrqLIQjzN
// SIG // uYzR216ewigfH4IUj0v6Hj78GZmK7TBCBgorBgEEAYI3
// SIG // AgEMMTQwMqAUgBIATQBpAGMAcgBvAHMAbwBmAHShGoAY
// SIG // aHR0cDovL3d3dy5taWNyb3NvZnQuY29tMA0GCSqGSIb3
// SIG // DQEBAQUABIIBAIIrfGf9Zm1LEVqF3ICsT7C0wCLnbE1E
// SIG // tVvb8aMxhlp/gSsptDmBfc2EvwajrRr2zOVtwlGPHPNp
// SIG // g9xiIp1LCTL6xDw0+0qxbXr7RFfM1WsQvDvdZzS4OR5w
// SIG // A5cbxesE3B6pHsfnUyPtdNg8i7PhZuCkxpBh6DtmNy9e
// SIG // Dq/c2HE22GZdAP0s1S6gX/3Tfi7d+7/GqVZ3aLRIuzHb
// SIG // BEqomM3jSKOI7G9ttMQehA2OcmpxgWWGLPDM8EHYshp1
// SIG // 8Ko/a2qmdTQNG7nAAe72zlGQFD4omPZdpGJCCPY+kSeX
// SIG // bqdEFpxbcBG2H9sy7Cphvp7lnAFwCB59LlaKbjQ+4r3r
// SIG // q1WhghewMIIXrAYKKwYBBAGCNwMDATGCF5wwgheYBgkq
// SIG // hkiG9w0BBwKggheJMIIXhQIBAzEPMA0GCWCGSAFlAwQC
// SIG // AQUAMIIBWgYLKoZIhvcNAQkQAQSgggFJBIIBRTCCAUEC
// SIG // AQEGCisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQg
// SIG // CjtL6IlwRcgaStExt6776m8Rnom6m1Z26//cx2AaMuAC
// SIG // BmdivAsPihgTMjAyNTAxMTAxNTUzNDUuNDY3WjAEgAIB
// SIG // 9KCB2aSB1jCB0zELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEtMCsG
// SIG // A1UECxMkTWljcm9zb2Z0IElyZWxhbmQgT3BlcmF0aW9u
// SIG // cyBMaW1pdGVkMScwJQYDVQQLEx5uU2hpZWxkIFRTUyBF
// SIG // U046MzIxQS0wNUUwLUQ5NDcxJTAjBgNVBAMTHE1pY3Jv
// SIG // c29mdCBUaW1lLVN0YW1wIFNlcnZpY2WgghH+MIIHKDCC
// SIG // BRCgAwIBAgITMwAAAfijoSYMDEBI/gABAAAB+DANBgkq
// SIG // hkiG9w0BAQsFADB8MQswCQYDVQQGEwJVUzETMBEGA1UE
// SIG // CBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEe
// SIG // MBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYw
// SIG // JAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0Eg
// SIG // MjAxMDAeFw0yNDA3MjUxODMxMDhaFw0yNTEwMjIxODMx
// SIG // MDhaMIHTMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMS0wKwYDVQQL
// SIG // EyRNaWNyb3NvZnQgSXJlbGFuZCBPcGVyYXRpb25zIExp
// SIG // bWl0ZWQxJzAlBgNVBAsTHm5TaGllbGQgVFNTIEVTTjoz
// SIG // MjFBLTA1RTAtRDk0NzElMCMGA1UEAxMcTWljcm9zb2Z0
// SIG // IFRpbWUtU3RhbXAgU2VydmljZTCCAiIwDQYJKoZIhvcN
// SIG // AQEBBQADggIPADCCAgoCggIBAMUdt6V2Jw9gbjg3Xl7N
// SIG // grv0+ZCiPmwMPHG7TedApvxQK418i+EU6jHupWkPwqnj
// SIG // E8YHJL2a9Sa1tDIuBdea8f1b3hoSgZqG+OQ5jnFeccse
// SIG // 4fU5OfTQJeTzTAFigCFn9u9ElgAFsUG6VSIYT1gp1Vd6
// SIG // LVb2oRGnfKTJqEl60+WezZNUZwe9ANm6vR5PMCHgt7wb
// SIG // sRF9hPF+dCIAB7Mmkfa6BatxK81BB5UvGJ0qt97oubgX
// SIG // KxTnBTgmSC7lRVU4BKkq1+FIl9Hraou41LSsqYCH5WmX
// SIG // FeXCOVyP3gsWPMAzZgaa4WDDZWMXZkPWi0Q3EylrXXVq
// SIG // ZybcpeXt4B7mKI/Mbg0NF2TcuxEkcCSCtN/q02an2mMj
// SIG // OF0itbNGmvpjuvb6PzZieEf39firnATyeMlHW6iVjN8T
// SIG // LwcC2MnL4oCP1iuJID6INFATXM2kMA1V6XFPkzHDr1j/
// SIG // BwVpliUCJk2SJwBYr16lGgW6N8AHzzW7EKbzTRrv9dqY
// SIG // NBfDvwnUX4Dx3zoSFkNA/ACwmPi7IsG83Ho261ZeDfX5
// SIG // 9sDoNrA2vEXzaA+teCNKRY8v5atTbAaPVeBmQYpM1+2Y
// SIG // 1gkYHdRQgVxqX6Q4pB40NOWDpAGpHVg09mxkmlGSRlWL
// SIG // XqSKT0wLNYHf71KIHHYi+daO7IbhyJQekElIkNuF2IUW
// SIG // 20AhAgMBAAGjggFJMIIBRTAdBgNVHQ4EFgQUvc7Gc8+e
// SIG // 0JU+Z67f6IrS79TkO7YwHwYDVR0jBBgwFoAUn6cVXQBe
// SIG // Yl2D9OXSZacbUzUZ6XIwXwYDVR0fBFgwVjBUoFKgUIZO
// SIG // aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9j
// SIG // cmwvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUy
// SIG // MDIwMTAoMSkuY3JsMGwGCCsGAQUFBwEBBGAwXjBcBggr
// SIG // BgEFBQcwAoZQaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
// SIG // L3BraW9wcy9jZXJ0cy9NaWNyb3NvZnQlMjBUaW1lLVN0
// SIG // YW1wJTIwUENBJTIwMjAxMCgxKS5jcnQwDAYDVR0TAQH/
// SIG // BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDAOBgNV
// SIG // HQ8BAf8EBAMCB4AwDQYJKoZIhvcNAQELBQADggIBAGH5
// SIG // PBs86RFZxpe8uqF6MrQm+Nh8ekzgNPnZGgSN+n7QxPbS
// SIG // 7m1Gv8TGxwea3DYkYRR2fd0Xn3T6XOPhRdAwJeZT/MSg
// SIG // Dvtvd0VjygxThSMYLWWNPLfA/XEkKYBlM8sN5RE2XmzS
// SIG // xANewPwk6QNhfbofI/OCsoHhG4/m4nVg4hH2sqB9gOf+
// SIG // csCScSLi8xVR2nL1sUgiqBfYZUq2UhuX11kt52pn+Lbe
// SIG // vdFE+gBslixVnvPeXKBT8Zv5tFCDI46fVURR+529zYNk
// SIG // OID0vROWUzGepwJZlInA49DVwLNsELkK52J20QCfw0Ft
// SIG // +ai6Ow2sPQLCLaoxYWzHBuvIA3OI++C9imHv9oKARy8M
// SIG // 0p+VA37UtR2SNGUbKpjRyNE2b71Fl/Wo5uknywUxLaE6
// SIG // OoCzl9FA//a64Ro3ZIgsOEsFOaLApYKoIjTCuZ3ZNoMR
// SIG // ZQ1xwsi6eagegaD6XPNkYTtMgs6D/YL+879hKHAFhLKh
// SIG // OftFprubmq5n73M4i31NUmNuNDmVvJXeLEvH58m5/4wz
// SIG // JhQIWs1dcx9EBEVhLHy0qcJDl2iJljRSeZZnJ39VU5un
// SIG // Jn2rEnGLRJaY6mfRqKAppNVxQKTkT7PzzuNyHBZj0cGo
// SIG // LdNIkEsPqwXiB9NCkKvhSU/+tkge9IPYP0fE0upOm/8L
// SIG // dlFoaq1vkPJcOl84Hsf2MIIHcTCCBVmgAwIBAgITMwAA
// SIG // ABXF52ueAptJmQAAAAAAFTANBgkqhkiG9w0BAQsFADCB
// SIG // iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWlj
// SIG // cm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
// SIG // IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgz
// SIG // MjI1WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
// SIG // Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCC
// SIG // AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOTh
// SIG // pkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjKNVf2
// SIG // AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYj
// SIG // DLWNE893MsAQGOhgfWpSg0S3po5GawcU88V29YZQ3MFE
// SIG // yHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJprx2rrPY2
// SIG // vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6O
// SIG // U8/W7IVWTe/dvI2k45GPsjksUZzpcGkNyjYtcI4xyDUo
// SIG // veO0hyTD4MmPfrVUj9z6BVWYbWg7mka97aSueik3rMvr
// SIG // g0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdb
// SIG // Z2De+JKRHh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZ
// SIG // nkXftnIv231fgLrbqn427DZM9ituqBJR6L8FA6PRc6ZN
// SIG // N3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEz
// SIG // OUyOArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMY
// SIG // ctenIPDC+hIK12NvDMk2ZItboKaDIV1fMHSRlJTYuVD5
// SIG // C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6
// SIG // bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17a
// SIG // j54WcmnGrnu3tz5q4i6tAgMBAAGjggHdMIIB2TASBgkr
// SIG // BgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQWBBQq
// SIG // p1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cV
// SIG // XQBeYl2D9OXSZacbUzUZ6XIwXAYDVR0gBFUwUzBRBgwr
// SIG // BgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYzaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1Jl
// SIG // cG9zaXRvcnkuaHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMI
// SIG // MBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1Ud
// SIG // DwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY
// SIG // MBaAFNX2VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRP
// SIG // ME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8y
// SIG // MDEwLTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYI
// SIG // KwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYt
// SIG // MjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3h
// SIG // LB9nATEkW+Geckv8qW/qXBS2Pk5HZHixBpOXPTEztTnX
// SIG // wnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6U03d
// SIG // mLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27Y
// SIG // P0h1AdkY3m2CDPVtI1TkeFN1JFe53Z/zjj3G82jfZfak
// SIG // Vqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis9/kpicO8
// SIG // F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4s
// SIG // a3tuPywJeBTpkbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6
// SIG // MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0sHrYUP4KWN1A
// SIG // PMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lU
// SIG // ZNlz138eW0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtq
// SIG // RRFHqfG3rsjoiV5PndLQTHa1V1QJsWkBRH58oWFsc/4K
// SIG // u+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLB
// SIG // gqJ7Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr
// SIG // 4A245oyZ1uEi6vAnQj0llOZ0dFtq0Z4+7X6gMTN9vMvp
// SIG // e784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQ
// SIG // tB1VM1izoXBm8qGCA1kwggJBAgEBMIIBAaGB2aSB1jCB
// SIG // 0zELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWlj
// SIG // cm9zb2Z0IElyZWxhbmQgT3BlcmF0aW9ucyBMaW1pdGVk
// SIG // MScwJQYDVQQLEx5uU2hpZWxkIFRTUyBFU046MzIxQS0w
// SIG // NUUwLUQ5NDcxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFNlcnZpY2WiIwoBATAHBgUrDgMCGgMVALZE
// SIG // Lf3m1kkOQ5xvmikczxCwhRPRoIGDMIGApH4wfDELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0
// SIG // IFRpbWUtU3RhbXAgUENBIDIwMTAwDQYJKoZIhvcNAQEL
// SIG // BQACBQDrK4vyMCIYDzIwMjUwMTEwMTIwNzE0WhgPMjAy
// SIG // NTAxMTExMjA3MTRaMHcwPQYKKwYBBAGEWQoEATEvMC0w
// SIG // CgIFAOsri/ICAQAwCgIBAAICA/gCAf8wBwIBAAICEh8w
// SIG // CgIFAOss3XICAQAwNgYKKwYBBAGEWQoEAjEoMCYwDAYK
// SIG // KwYBBAGEWQoDAqAKMAgCAQACAwehIKEKMAgCAQACAwGG
// SIG // oDANBgkqhkiG9w0BAQsFAAOCAQEAC8V5lwev1S41K8cI
// SIG // JnQuUDUBfzeRh9o+wb9h7zi6b2AGtQuBXi+7AutsVHDC
// SIG // +Dl34XTaplDA9VzvAgMSe6boQMRlT8VdstTss+mk19Ut
// SIG // M3kWV1oPVOt9x9dljAxLE46lYLh1CazHmeExYCkPGo1K
// SIG // vZrj/xCjMxjG2JhHeYez8mB3yUlO5v6ZE6O+xv3dtL/T
// SIG // /az7rFiv/WB8rDJi+Pdsa6boLNKpcETospN3y5cBKs+c
// SIG // 0mOrUPLSKDoBtRhiIdh0hXTwhEin2mYX9nHOPoiOtJ1X
// SIG // uHDLydoCZLenIYjzLsxCozlLle96Sa0blPw0wJdbJd3C
// SIG // JGTn3n8q4bDK0v5U1zGCBA0wggQJAgEBMIGTMHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB+KOhJgwM
// SIG // QEj+AAEAAAH4MA0GCWCGSAFlAwQCAQUAoIIBSjAaBgkq
// SIG // hkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwLwYJKoZIhvcN
// SIG // AQkEMSIEICsFu5j0SjrzdimJKnm9o1T9EvGSATur3m1k
// SIG // X2QmzNL2MIH6BgsqhkiG9w0BCRACLzGB6jCB5zCB5DCB
// SIG // vQQg78wz8l8NVJAFBWLfG0eFHYzPdEL+cZ1Woig9yNGc
// SIG // 91owgZgwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UE
// SIG // CBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEe
// SIG // MBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYw
// SIG // JAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0Eg
// SIG // MjAxMAITMwAAAfijoSYMDEBI/gABAAAB+DAiBCBQCNIl
// SIG // HPBb2k2Jc/nLV8pV6J4NAES7vSzpYZ66KjtpRDANBgkq
// SIG // hkiG9w0BAQsFAASCAgA5xvNyfd79DPNN3crAUHGzAYNq
// SIG // KNiZct7nW0y0wwQnAKmFn+wG4Thd5TILneYWIhA0DhyA
// SIG // gKVQmBZa8USOaks3P2jSogH1QB4VThKqfWi7LJlb6kjR
// SIG // bdSt+CHqkfxcksHAqGh1gqwN8NR52NBo4bg+kziliJYD
// SIG // CWWBiAQnn6GU5tR7a1+C/o1wjlzl0D4aZ1TYxoJdVLnF
// SIG // K3sE0U1E9WKYPsm7C7qKU3VQFNM0d6PNKGLjiStkAvWh
// SIG // cpQNqho+c8dUAWVeyG7uYv3PI/4IMMT8YB3N9gfbyLDl
// SIG // ph6l1p0ndWAqrGLVNkeQ2J2v5t3uHvEWkA8XiU9Gp/6Z
// SIG // GOGmH2n2IXv2D3TXrb3eMiubTv02Kx+6AqnVrhb3+8gA
// SIG // Tj7myz7M85hR1vu0/UD7e3Ir87uQvyPIb2mBo6QlYFAk
// SIG // GfhIgHAzaSSt+vdg/mS7sb6P6LD5w6Y43GwvKv4jg8GX
// SIG // zFY82b1Rq1/JHjwqw1DMc66o8fosbVmKDej4uwPb9fYt
// SIG // t5zPBpYSj1zPfFWtN9wZmmeUAjl/c0I0C6SWwTC7pbaC
// SIG // tAHZTjtkgjPAfawYkS+tHD0McfjBIvQ6YTj1fAqSjAps
// SIG // ten1DAgfGtM3YTb+WmbMiqQqg5Uj1IGJ3rdnC4tX2l9G
// SIG // ls88904yVQ0YfPN+7MJ+1Bnkzf2JzjeruEKUgZpYnw==
// SIG // End signature block
